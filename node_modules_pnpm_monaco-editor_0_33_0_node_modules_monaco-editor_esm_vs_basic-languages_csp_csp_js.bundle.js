"use strict";
(self["webpackChunk_kie_tools_serverless_logic_sandbox"] = self["webpackChunk_kie_tools_serverless_logic_sandbox"] || []).push([["node_modules_pnpm_monaco-editor_0_33_0_node_modules_monaco-editor_esm_vs_basic-languages_csp_csp_js"],{

/***/ "../../node_modules/.pnpm/monaco-editor@0.33.0/node_modules/monaco-editor/esm/vs/basic-languages/csp/csp.js":
/*!******************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/monaco-editor@0.33.0/node_modules/monaco-editor/esm/vs/basic-languages/csp/csp.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "conf": () => (/* binding */ conf),
/* harmony export */   "language": () => (/* binding */ language)
/* harmony export */ });
/*!-----------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Version: 0.33.0(4b1abad427e58dbedc1215d99a0902ffc885fcd4)
 * Released under the MIT license
 * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt
 *-----------------------------------------------------------------------------*/

// src/basic-languages/csp/csp.ts
var conf = {
  brackets: [],
  autoClosingPairs: [],
  surroundingPairs: []
};
var language = {
  keywords: [],
  typeKeywords: [],
  tokenPostfix: ".csp",
  operators: [],
  symbols: /[=><!~?:&|+\-*\/\^%]+/,
  escapes: /\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,
  tokenizer: {
    root: [
      [/child-src/, "string.quote"],
      [/connect-src/, "string.quote"],
      [/default-src/, "string.quote"],
      [/font-src/, "string.quote"],
      [/frame-src/, "string.quote"],
      [/img-src/, "string.quote"],
      [/manifest-src/, "string.quote"],
      [/media-src/, "string.quote"],
      [/object-src/, "string.quote"],
      [/script-src/, "string.quote"],
      [/style-src/, "string.quote"],
      [/worker-src/, "string.quote"],
      [/base-uri/, "string.quote"],
      [/plugin-types/, "string.quote"],
      [/sandbox/, "string.quote"],
      [/disown-opener/, "string.quote"],
      [/form-action/, "string.quote"],
      [/frame-ancestors/, "string.quote"],
      [/report-uri/, "string.quote"],
      [/report-to/, "string.quote"],
      [/upgrade-insecure-requests/, "string.quote"],
      [/block-all-mixed-content/, "string.quote"],
      [/require-sri-for/, "string.quote"],
      [/reflected-xss/, "string.quote"],
      [/referrer/, "string.quote"],
      [/policy-uri/, "string.quote"],
      [/'self'/, "string.quote"],
      [/'unsafe-inline'/, "string.quote"],
      [/'unsafe-eval'/, "string.quote"],
      [/'strict-dynamic'/, "string.quote"],
      [/'unsafe-hashed-attributes'/, "string.quote"]
    ]
  }
};



/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX3BucG1fbW9uYWNvLWVkaXRvcl8wXzMzXzBfbm9kZV9tb2R1bGVzX21vbmFjby1lZGl0b3JfZXNtX3ZzX2Jhc2ljLWxhbmd1YWdlc19jc3BfY3NwX2pzLmJ1bmRsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsSUFBSSxjQUFjLEVBQUUsY0FBYyxFQUFFO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGtpZS10b29scy9zZXJ2ZXJsZXNzLWxvZ2ljLXNhbmRib3gvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL21vbmFjby1lZGl0b3JAMC4zMy4wL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvY3NwL2NzcC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBWZXJzaW9uOiAwLjMzLjAoNGIxYWJhZDQyN2U1OGRiZWRjMTIxNWQ5OWEwOTAyZmZjODg1ZmNkNClcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxuICogaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9tb25hY28tZWRpdG9yL2Jsb2IvbWFpbi9MSUNFTlNFLnR4dFxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi8vIHNyYy9iYXNpYy1sYW5ndWFnZXMvY3NwL2NzcC50c1xudmFyIGNvbmYgPSB7XG4gIGJyYWNrZXRzOiBbXSxcbiAgYXV0b0Nsb3NpbmdQYWlyczogW10sXG4gIHN1cnJvdW5kaW5nUGFpcnM6IFtdXG59O1xudmFyIGxhbmd1YWdlID0ge1xuICBrZXl3b3JkczogW10sXG4gIHR5cGVLZXl3b3JkczogW10sXG4gIHRva2VuUG9zdGZpeDogXCIuY3NwXCIsXG4gIG9wZXJhdG9yczogW10sXG4gIHN5bWJvbHM6IC9bPT48IX4/OiZ8K1xcLSpcXC9cXF4lXSsvLFxuICBlc2NhcGVzOiAvXFxcXCg/OlthYmZucnR2XFxcXFwiJ118eFswLTlBLUZhLWZdezEsNH18dVswLTlBLUZhLWZdezR9fFVbMC05QS1GYS1mXXs4fSkvLFxuICB0b2tlbml6ZXI6IHtcbiAgICByb290OiBbXG4gICAgICBbL2NoaWxkLXNyYy8sIFwic3RyaW5nLnF1b3RlXCJdLFxuICAgICAgWy9jb25uZWN0LXNyYy8sIFwic3RyaW5nLnF1b3RlXCJdLFxuICAgICAgWy9kZWZhdWx0LXNyYy8sIFwic3RyaW5nLnF1b3RlXCJdLFxuICAgICAgWy9mb250LXNyYy8sIFwic3RyaW5nLnF1b3RlXCJdLFxuICAgICAgWy9mcmFtZS1zcmMvLCBcInN0cmluZy5xdW90ZVwiXSxcbiAgICAgIFsvaW1nLXNyYy8sIFwic3RyaW5nLnF1b3RlXCJdLFxuICAgICAgWy9tYW5pZmVzdC1zcmMvLCBcInN0cmluZy5xdW90ZVwiXSxcbiAgICAgIFsvbWVkaWEtc3JjLywgXCJzdHJpbmcucXVvdGVcIl0sXG4gICAgICBbL29iamVjdC1zcmMvLCBcInN0cmluZy5xdW90ZVwiXSxcbiAgICAgIFsvc2NyaXB0LXNyYy8sIFwic3RyaW5nLnF1b3RlXCJdLFxuICAgICAgWy9zdHlsZS1zcmMvLCBcInN0cmluZy5xdW90ZVwiXSxcbiAgICAgIFsvd29ya2VyLXNyYy8sIFwic3RyaW5nLnF1b3RlXCJdLFxuICAgICAgWy9iYXNlLXVyaS8sIFwic3RyaW5nLnF1b3RlXCJdLFxuICAgICAgWy9wbHVnaW4tdHlwZXMvLCBcInN0cmluZy5xdW90ZVwiXSxcbiAgICAgIFsvc2FuZGJveC8sIFwic3RyaW5nLnF1b3RlXCJdLFxuICAgICAgWy9kaXNvd24tb3BlbmVyLywgXCJzdHJpbmcucXVvdGVcIl0sXG4gICAgICBbL2Zvcm0tYWN0aW9uLywgXCJzdHJpbmcucXVvdGVcIl0sXG4gICAgICBbL2ZyYW1lLWFuY2VzdG9ycy8sIFwic3RyaW5nLnF1b3RlXCJdLFxuICAgICAgWy9yZXBvcnQtdXJpLywgXCJzdHJpbmcucXVvdGVcIl0sXG4gICAgICBbL3JlcG9ydC10by8sIFwic3RyaW5nLnF1b3RlXCJdLFxuICAgICAgWy91cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzLywgXCJzdHJpbmcucXVvdGVcIl0sXG4gICAgICBbL2Jsb2NrLWFsbC1taXhlZC1jb250ZW50LywgXCJzdHJpbmcucXVvdGVcIl0sXG4gICAgICBbL3JlcXVpcmUtc3JpLWZvci8sIFwic3RyaW5nLnF1b3RlXCJdLFxuICAgICAgWy9yZWZsZWN0ZWQteHNzLywgXCJzdHJpbmcucXVvdGVcIl0sXG4gICAgICBbL3JlZmVycmVyLywgXCJzdHJpbmcucXVvdGVcIl0sXG4gICAgICBbL3BvbGljeS11cmkvLCBcInN0cmluZy5xdW90ZVwiXSxcbiAgICAgIFsvJ3NlbGYnLywgXCJzdHJpbmcucXVvdGVcIl0sXG4gICAgICBbLyd1bnNhZmUtaW5saW5lJy8sIFwic3RyaW5nLnF1b3RlXCJdLFxuICAgICAgWy8ndW5zYWZlLWV2YWwnLywgXCJzdHJpbmcucXVvdGVcIl0sXG4gICAgICBbLydzdHJpY3QtZHluYW1pYycvLCBcInN0cmluZy5xdW90ZVwiXSxcbiAgICAgIFsvJ3Vuc2FmZS1oYXNoZWQtYXR0cmlidXRlcycvLCBcInN0cmluZy5xdW90ZVwiXVxuICAgIF1cbiAgfVxufTtcbmV4cG9ydCB7XG4gIGNvbmYsXG4gIGxhbmd1YWdlXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9